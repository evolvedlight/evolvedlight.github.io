<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Steve Brown's blog </title>
        <link>https://brown.bg</link>
        <description>Articles and photos about C# and extreme sports</description>
        <lastBuildDate>Mon, 21 Nov 2022 16:23:41 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <image>
            <title>Steve Brown's blog </title>
            <url>https://vuejs.org/images/logo.png</url>
            <link>https://brown.bg</link>
        </image>
        <copyright>Copyright (c) 2021-present, Yuxi (Evan) You and blog contributors</copyright>
        <item>
            <title><![CDATA[Coding on the ipad]]></title>
            <link>https://brown.bg/posts/coding-on-the-ipad.html</link>
            <guid>https://brown.bg/posts/coding-on-the-ipad.html</guid>
            <pubDate>Mon, 21 Nov 2022 12:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div><p>This is a post showing show to code/update this blog from the ipad mini using a handy bluetooth keyboard. Easier than it looks!</p></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Dockerless docker builds in Github Actions with Dotnet 7]]></title>
            <link>https://brown.bg/posts/github-actions-net7-docker.html</link>
            <guid>https://brown.bg/posts/github-actions-net7-docker.html</guid>
            <pubDate>Fri, 14 Oct 2022 12:00:00 GMT</pubDate>
            <description><![CDATA[<p>How to setup a github build action that uses the dockerless build in .Net 7</p>
]]></description>
            <content:encoded><![CDATA[<div><p>How to setup a github build action that uses the dockerless build in .Net 7</p><hr><h2 id="background" tabindex="-1">Background <a class="header-anchor" href="#background" aria-hidden="true">#</a></h2><p>For me, one of the slowest parts of the fast build-test-deploy cycle was always waiting for docker builds to run. Especially with the practise of docker-in-docker builds which without special magic wouldn&#39;t cache anything, it could often take several minutes to create a docker application. .Net 7 promises to offer an alternative to this for simple apps - let&#39;s take a dive in.</p><h3 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-hidden="true">#</a></h3><p>You&#39;ll need .Net 7 for this, which isn&#39;t currently released at time of writing. However, in theory you can take a .Net 6 application and use the .Net 7 SDK to build it already, however YMMV.</p><p>With this installed, let&#39;s create a new app and get started! We&#39;re following along with <a href="https://devblogs.microsoft.com/dotnet/announcing-builtin-container-support-for-the-dotnet-sdk/" target="_blank" rel="noopener noreferrer">https://devblogs.microsoft.com/dotnet/announcing-builtin-container-support-for-the-dotnet-sdk/</a> but with some changes</p><h3 id="basic-app" tabindex="-1">Basic app <a class="header-anchor" href="#basic-app" aria-hidden="true">#</a></h3><div class="language-bash"><pre><code>dotnet new webapi -o dockerless-docker
<span class="token builtin class-name">cd</span> dockerless-docker
</code></pre></div><p>We also need to do a couple of things: because .Net 7 isn&#39;t out yet, we need a globals file to tell the github actions to use it</p><p>That gives us our basic app - let&#39;s add a github actions build for it now, by adding the following:</p><div class="language-json"><pre><code><span class="token punctuation">{</span>
    <span class="token property">&quot;sdk&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7.0.100-rc.2.22477.23&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>We&#39;ll also need to add a reference to this tool:</p><div class="language-bash"><pre><code>dotnet <span class="token function">add</span> package Microsoft.NET.Build.Containers
</code></pre></div><p>Now, add a github actions to <code>.github/workflows/whatever.yml</code></p><div class="language-yaml"><pre><code><span class="token key atrule">name</span><span class="token punctuation">:</span> Create and publish a Docker image

<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;*&quot;</span> <span class="token punctuation">]</span>
  <span class="token key atrule">pull_request</span><span class="token punctuation">:</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;main&quot;</span> <span class="token punctuation">]</span>


<span class="token key atrule">env</span><span class="token punctuation">:</span>
  <span class="token key atrule">REGISTRY</span><span class="token punctuation">:</span> ghcr.io
  <span class="token key atrule">IMAGE_NAME</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.repository <span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">build-and-push-image</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">permissions</span><span class="token punctuation">:</span>
      <span class="token key atrule">contents</span><span class="token punctuation">:</span> read
      <span class="token key atrule">packages</span><span class="token punctuation">:</span> write

    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup .NET SDK
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>dotnet@v2
      <span class="token comment"># Package the app into a linux-x64 container based on the dotnet/aspnet image</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Publish
        <span class="token key atrule">run</span><span class="token punctuation">:</span> dotnet publish <span class="token punctuation">-</span><span class="token punctuation">-</span>os linux <span class="token punctuation">-</span><span class="token punctuation">-</span>arch x64 <span class="token punctuation">-</span><span class="token punctuation">-</span>configuration Release <span class="token punctuation">-</span>p<span class="token punctuation">:</span>PublishProfile=DefaultContainer
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout repository
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to GitHub Container Registry
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v2
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">registry</span><span class="token punctuation">:</span> ghcr.io
          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.actor <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.GITHUB_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Tag built container with Github thing
        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
          docker tag dockerless-docker:1.0.0 ghcr.io/evolvedlight/dockerless-docker:1.0.0</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Push built container to Github Package Repo
        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
          docker push ghcr.io/evolvedlight/dockerless-docker:1.0.0</span>
</code></pre></div><p>Here&#39;s now where the weird bit comes - on github the process to get a repository seems rather backward. You need to assign permissions for the repo to write images, but there&#39;s no way to do that <em>until</em> you&#39;ve pushed an image manually!</p><p>So let&#39;s go around the hoops - create the docker image locally, tag it, login to the Github repository and upload it:</p><div class="language-"><pre><code>dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=DefaultContainer
docker tag dockerless-docker:1.0.0 ghcr.io/evolvedlight/dockerless-docker:1.0.0
docker login ghcr.io -u &lt;your username&gt;
</code></pre></div><p>Enter a Personal access token that you can create on your github profile page, and finally push the image:</p><div class="language-"><pre><code>docker push ghcr.io/evolvedlight/dockerless-docker:1.0.0
</code></pre></div><p>Now go to your packages page, for me that&#39;s <a href="https://github.com/evolvedlight?tab=packages" target="_blank" rel="noopener noreferrer">https://github.com/evolvedlight?tab=packages</a>. Click on the new package page that was created, and then go to the settings for it (for me <a href="https://github.com/users/evolvedlight/packages/container/dockerless-docker/settings" target="_blank" rel="noopener noreferrer">https://github.com/users/evolvedlight/packages/container/dockerless-docker/settings</a>)</p><p>Under &quot;Manage Actions access&quot; add your repository with access.</p><p>In the end it&#39;ll look like this:</p><p><img src="/images/github_actions_permission.png" alt="github permissions"></p><p>Finally, rerun the action and it should work.</p><p>In the next blob post we&#39;ll look at fixing the above docker build to push with the right version numbers and tags</p></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Initial VitePress Setup]]></title>
            <link>https://brown.bg/posts/initial.html</link>
            <guid>https://brown.bg/posts/initial.html</guid>
            <pubDate>Thu, 14 Jul 2022 12:00:00 GMT</pubDate>
            <description><![CDATA[<p>Based on the official VueJs blog, this is a SSG site</p>
]]></description>
            <content:encoded><![CDATA[<div><p>Based on the official VueJs blog, this is a SSG site</p><hr><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-hidden="true">#</a></h2><p>Take the VueJs blog repo and change as needed. Live reloads like a dream. Added a CNAME now and checking to see if it stays</p></div>]]></content:encoded>
        </item>
    </channel>
</rss>